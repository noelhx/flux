include 'flux.lm'

parse F: flux [stdin]

if !F {
	print "[error]
	exit(1)
}

for DL: duration_lit in F
	print "duration lit: [^DL]

for DTL: date_time_lit in F
	print "date time lit: [^DTL]

for FL: float_lit in F
	print "float lit: [^FL]

for VA: variable_assignment in F
	print "variable assignemnt: [^VA]

for OA: option_assignment in F
{
	print "option assignemnt: [^OA]
	if match OA.opt_qual [I: identifier `.]
	{
		print "    has qualification: [^I]
	}
}

for OL: object_literal in F
	print "object literal: [^OL]

for FL: function_literal in F
	print "function literal: [^FL]

for CE: call_expression in F
	print "call expression: [^CE]

for PE: pipe_expression in F {
	if match PE
			[pipe_expression pipe_operator unary_expression]
	{
		print "pipe expression: [^PE]
	}
}

for ME: member_expression in F
	print "member expression: [^ME]

for CE: conditional_expression in F {
	if match CE
		[`if expression `then expression `else expression]
	{
		print "[^CE]
	}
}

